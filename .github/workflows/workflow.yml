  name: CICD
  on:
    workflow_dispatch:
    push:
        branches: [ develop, github_action_cicd ]
    pull_request:
        branches: [ develop ]

  jobs:
    build:
        name: Build
        runs-on: ${{ vars.RUNNING_HOST }}

        env:
          GITHUB_USERNAME: ${{ secrets.SECRET_GITHUB_USERNAME }}
          GITHUB_ACCESS_TOKEN: ${{ secrets.SECRET_GITHUB_ACCESS_TOKEN }}
          STORE_PASSWORD: ${{ secrets.KEYSTORE_KEY_STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          HUAWEI_PUBLISHING_APP_ID: ${{ secrets.HUAWEI_PUBLISHING_APP_ID }}
          HUAWEI_PUBLISHING_CLIENT_ID: ${{ secrets.HUAWEI_PUBLISHING_CLIENT_ID }}
          HUAWEI_PUBLISHING_CLIENT_SECRET: ${{ secrets.HUAWEI_PUBLISHING_CLIENT_SECRET }}

        steps:
          - name: Check out project
            uses: actions/checkout@v3

          - name: Setup JDK Version
            uses: actions/setup-java@v3
            with:
              java-version: ${{ vars.JAVA_VERSION }}
              distribution: ${{ vars.JAVA_DISTRIBUTION }}

          - name: Grant execute permission for gradlew
            run: chmod +x gradlew

          - name: Set up keystore
            env:
              ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_FILE_BASE64 }}
            run: |
              echo $ENCODED_KEYSTORE | base64 -D > keystore-voicetube.keystore
              echo "KEYSTORE_FILE=$PWD/keystore-voicetube.keystore" >> $GITHUB_ENV

          - name: Build Release APK and AAB
            run: |
              ./gradlew assembleRelease
              ./gradlew bundleRelease

          - name: Upload APK
            uses: actions/upload-artifact@v4
            with:
                name: app-release.apk
                path: app/build/outputs/apk/release/app-release.apk

          - name: Upload AAB
            uses: actions/upload-artifact@v4
            with:
                name: app-release.aab
                path: app/build/outputs/bundle/release/app-release.aab

          - name: Send notification to Google Chat
            if: always()
            env:
              MESSAGE: |
                Workflow 已完成！
                Status: ${{ job.status }}
                Repository: ${{ github.repository }}
                Workflow: ${{ github.workflow }}
                Commit: ${{ github.sha }}
                Triggered by: ${{ github.actor }}
            run: |
              MESSAGE=$(echo "$MESSAGE" | awk '{printf "%s\\n", $0}' | sed 's/"/\\"/g')
              curl -X POST -H 'Content-Type: application/json' -d "{
                \"text\": \"$MESSAGE\"
              }" '${{ secrets.GOOGLE_CHAT_WEBHOOK }}'