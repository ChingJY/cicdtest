name: CICD-SWITCH-BRANCH
on:
  workflow_dispatch:
  push:
    branches: [ develop, release, master, github_action_cicd ]
#    pull_request:
#        branches: [ develop ]

env:
  GITHUB_USERNAME: ${{ secrets.SECRET_GITHUB_USERNAME }}
  GITHUB_ACCESS_TOKEN: ${{ secrets.SECRET_GITHUB_ACCESS_TOKEN }}
  STORE_PASSWORD: ${{ secrets.KEYSTORE_KEY_STORE_PASSWORD }}
  KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
  KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
  HUAWEI_PUBLISHING_APP_ID: ${{ secrets.HUAWEI_PUBLISHING_APP_ID }}
  HUAWEI_PUBLISHING_CLIENT_ID: ${{ secrets.HUAWEI_PUBLISHING_CLIENT_ID }}
  HUAWEI_PUBLISHING_CLIENT_SECRET: ${{ secrets.HUAWEI_PUBLISHING_CLIENT_SECRET }}
  WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  develop_task:
    name: Run develop branch task
    runs-on: ${{ vars.RUNNING_HOST }}
#    if: github.ref_name == 'develop'
    steps:
      - name: Check out project
        uses: actions/checkout@v4

      - name: Setup JDK Version
        uses: actions/setup-java@v4
        with:
          java-version: ${{ vars.JAVA_VERSION }}
          distribution: ${{ vars.JAVA_DISTRIBUTION }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_FILE_BASE64 }}
        run: |
          echo $ENCODED_KEYSTORE | base64 -D > keystore-voicetube.keystore
          echo "KEYSTORE_FILE=$PWD/keystore-voicetube.keystore" >> $GITHUB_ENV

      - name: Build Release APK
        run: |
          ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-artifact
          overwrite: true
          path: app/build/outputs/

      - name: Read versionInfo.txt
        run: echo "VERSION_NAME=$(cat versionInfo.txt)" >> $GITHUB_ENV

      - name: Send success notification to Google Chat
        uses: ./.github/actions/google-chat-notification-action
        with:
          webhook_url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          message: "Android CICDTest 已成功整合"
          version_name: ${{ env.VERSION_NAME }}

      - name: Send failure notification to Google Chat
        if: failure()
        uses: ./.github/actions/google-chat-notification-action
        with:
          webhook_url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          title: "Android CICDTest"
          message: "Android VoiceTube build failed"
          buttons: |
            前往查看::${{ env.WORKFLOW_URL }}

  release_task:
    name: Run release branch task
    runs-on: ${{ vars.RUNNING_HOST }}
#    if: github.ref_name == 'release'
    steps:
      - name: Check out project
        uses: actions/checkout@v4

      - name: Setup JDK Version
        id: setup-java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ vars.JAVA_VERSION }}
          distribution: ${{ vars.JAVA_DISTRIBUTION }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_FILE_BASE64 }}
        run: |
          echo $ENCODED_KEYSTORE | base64 -D > keystore-voicetube.keystore
          echo "KEYSTORE_FILE=$PWD/keystore-voicetube.keystore" >> $GITHUB_ENV  

      - name: Decrypt Firebase Distribution credential
        run: |
          openssl enc -aes-256-cbc -k "${{ secrets.OPENSSL_PASSWORD }}" \
          -in firebase-app-distribution-credential.json.enc \
          -out firebase-app-distribution-credential.json -d -md sha256

      - name: Generate file of commit message
        run: |
          git show -s --format=%B > commit.txt
          echo "save commit message to file commit.txt"
          cat commit.txt

      - name: Build Release APK and AAB
        run: |
          ./gradlew assembleRelease
          ./gradlew bundleRelease

      - name: Upload AAB
        id: upload-release-artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.aab
          overwrite: true
          path: app/build/outputs/bundle/release/app-release.aab

      - name: Upload to Firebase App Distribution
        run: ./gradlew appDistributionUploadRelease

      - name: Read versionInfo.txt
        id: read_version
        run: echo "VERSION_NAME=$(cat versionInfo.txt)" >> $GITHUB_ENV

      - name: Send success notification to Google Chat
        uses: ./.github/actions/google-chat-notification-action
        with:
          webhook_url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          title: "Android CICDTest"
          message: "Android CICDTest 已發布測試  🎉"
          version_name: ${{ env.VERSION_NAME }}

      - name: Send failure notification to Google Chat
        if: failure()
        uses: ./.github/actions/google-chat-notification-action
        with:
          webhook_url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          title: "Android CICDTest"
          message: "Android CICDTest build failed"
          buttons: |
            前往查看::${{ env.WORKFLOW_URL }}

  master_task:
    name: Run master branch task
    runs-on: ${{ vars.RUNNING_HOST }}
#    if: github.ref_name == 'master'
    steps:
      - name: Check out project
        uses: actions/checkout@v4

      - name: Setup JDK Version
        id: setup-java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ vars.JAVA_VERSION }}
          distribution: ${{ vars.JAVA_DISTRIBUTION }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_FILE_BASE64 }}
        run: |
          echo $ENCODED_KEYSTORE | base64 -D > keystore-voicetube.keystore
          echo "KEYSTORE_FILE=$PWD/keystore-voicetube.keystore" >> $GITHUB_ENV

      - name: Check Java version
        run: java -version

      - name: Build Release AAB
        run: |
          ./gradlew bundleRelease

      - name: Upload AAB
        id: upload-release-artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-prd.aab
          overwrite: true
          path: app/build/outputs/bundle/release/app-release.aab

      - name: Check if mapping.txt exists
        id: check_mapping
        run: |
          if [ -f app/build/outputs/mapping/release/mapping.txt ]; then
            echo "MAPPING_FILE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "MAPPING_FILE_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Publish to google play
        id: publish-google-play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_KEY }}
          packageName: com.yitianyitiandan.cicdtest
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: beta
          status: draft
          mappingFile: ${{ env.MAPPING_FILE_EXISTS == 'true' && 'app/build/outputs/mapping/release/mapping.txt' || '' }}

      - name: Send success notification to Google Chat
        uses: ./.github/actions/google-chat-notification-action
        with:
          webhook_url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          title: "Android CICDTest"
          message: "Android CICDTest 已佈署至 Google Play Store (Beta)  🚀\n請相關人員注意發版"
          version_name: ${{ env.VERSION_NAME }}
          buttons: |
            前往 Google Play Console 發版::https://play.google.com/console/u/0/developers/5409789340805974120/app/4972045572799454695/tracks/production
            前往 AppGallery Connect 發版::https://developer.huawei.com/consumer/cn/service/josp/agc/index.html#/myApp
            Edit Release Note::https://docs.google.com/spreadsheets/d/1C3-ohBrzsYCMyzzxnY3yis9Fuh84ibge-8M0mAnW1jg/edit#gid=1410907833
            前往 Remote Config 強制更版::https://console.firebase.google.com/u/0/project/lithe-window-713/config

      - name: Send failure notification to Google Chat
        if: failure()
        uses: ./.github/actions/google-chat-notification-action
        with:
          webhook_url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          title: "Android CICDTest"
          message: "Android CICDTest build failed"
          buttons: |
            前往查看::${{ env.WORKFLOW_URL }}
