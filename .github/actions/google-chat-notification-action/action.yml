name: 'Google Chat Notification Action'
description: 'Send a customizable notification to Google Chat'
inputs:
  webhook_url:
    description: Google Chat webhook Url
    required: true
  title:
    description: 'Title of the card'
    required: true
    default: Notification
  subtitle:
    description: 'Subtitle of the card'
    required: false
  key_value_pairs:
    description: 'Key-value pairs to display, one pair per line in format: key=value'
    required: false
  buttons:
    description: 'Buttons to display, one button per line in format: label::url'
    required: false
runs:
  using: "composite"
  steps:
    - name: Send Google Chat Notification
      shell: bash
      env:
        WEBHOOK_URL: ${{ inputs.webhook_url }}
        CARD_TITLE: ${{ inputs.title }}
        CARD_SUBTITLE: ${{ inputs.subtitle }}
        KEY_VALUE_PAIRS: ${{ inputs.key_value_pairs }}
        BUTTONS: ${{ inputs.buttons }}
      run: |
        # Function to create keyValue widgets
        create_key_value_widgets() {
          if [ -n "$KEY_VALUE_PAIRS" ]; then
            echo "$KEY_VALUE_PAIRS" | while IFS= read -r line; do
              IFS='=' read -r key value <<< "$line"
              echo "{\"keyValue\": {\"topLabel\": \"$key\", \"content\": \"$value\"}}"
            done
          fi
        }
        
        # Function to create button widgets
        create_button_widgets() {
          if [ -n "$BUTTONS" ]; then
            echo "$BUTTONS" | while IFS= read -r line; do
              IFS='::' read -r label url <<< "$line"
              echo "{\"buttons\": [{\"textButton\": {\"text\": \"$label\", \"onClick\": {\"openLink\": {\"url\": \"$url\"}}}}]}"
            done
          fi
        }
        
        # Construct the payload
        payload=$(cat <<EOF
          {
            "cardsV2": [
              {
                "header": {
                  "title": "$CARD_TITLE",
                  "subtitle": "$CARD_SUBTITLE"
                  "imageUrl": "https://cdn.voicetube.com/assets/img/app_logo/android.png",
                  "imageType": "CIRCLE",
                },
                "collapsible": true,
                "sections": [
                  {
                    "widgets": [
                      $(create_key_value_widgets | paste -sd, -),
                      $(create_button_widgets | paste -sd, -)
                    ]
                  }
                ]
              }
            ]
          }
        EOF
        )
        
        # Send the notification
        curl --location --request POST "$WEBHOOK_URL" \
          --header 'Content-Type: application/json' \
          --data-raw "$payload"
